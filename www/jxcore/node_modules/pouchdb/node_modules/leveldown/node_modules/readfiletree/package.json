{
  "author": {
    "name": "Rod Vagg @rvagg",
    "email": "rod@vagg.org"
  },
  "name": "readfiletree",
  "description": "Serialize a tree of files and directories into object form",
  "keywords": [
    "temp",
    "tree",
    "test",
    "serialize",
    "deserialize"
  ],
  "version": "0.0.1",
  "main": "readfiletree.js",
  "scripts": {
    "test": "node tests.js"
  },
  "dependencies": {
    "async": "~0.1.18"
  },
  "devDependencies": {
    "mkfiletree": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/rvagg/node-readfiletree.git"
  },
  "readme": "# node-readfiletree\n\nDeserialize an file/directory tree into an object. Available in npm as *readfiletree*\n\n[![NPM](https://nodei.co/npm/readfiletree.png?stars&downloads)](https://nodei.co/npm/readfiletree/)\n\nParticularly useful for testing where you need to do a `deepEqual()` on a simple tree of files. **See [node-mkfiletree](https://github.com/rvagg/node-mkfiletree) for file tree serialization.**\n\n### require('readfiletree')(directory, callback)\n\nRead the directory and the files it contains, recursively, and return an object representing the directory structure with nodes containing the utf8 string contents of each file. The arguments of the callback are: `(err, object)`.\n\nUsing both *mkfiletree* and *readfiletree* we can do the following:\n\n```js\nrequire('mkfiletree').makeTemp(\n  'testfiles',\n  {\n    'adir': {\n      'one.txt': '1\\n2\\n3\\n',\n      'two.txt': 'a\\nb\\nc\\n',\n      'deeper': {\n        'depths.txt': 'whoa...'\n      }\n    },\n    'afile.txt': 'file contents'\n  },\n  function (err, dir) {\n    require('readfiletree')(dir, function (err, obj) {\n      console.log(obj)\n    })\n  }\n)\n```\n\nThe directory structre created above looks like the following:\n\n```\n$ find /tmp/testfiles11240-23530-r7rs3 -type f -exec sh -c \"echo '\\n{}: ' && cat '{}'\" \\;\n  â†’  /tmp/testfiles11240-23530-r7rs3/afile.txt: \n      file contents\n      /tmp/testfiles11240-23530-r7rs3/adir/deeper/depths.txt: \n      whoa...\n      /tmp/testfiles11240-23530-r7rs3/adir/two.txt: \n      a\n      b\n      c\n\n      /tmp/testfiles11240-23530-r7rs3/adir/one.txt: \n      1\n      2\n      3\n\n```\n\nAnd the output of the program should be the same as the input to *mkfiletree*:\n\n```js\n{\n  'adir': {\n    'one.txt': '1\\n2\\n3\\n',\n    'two.txt': 'a\\nb\\nc\\n',\n    'deeper': {\n      'depths.txt': 'whoa...'\n    }\n  },\n  'afile.txt': 'file contents'\n}\n```\n\n## Contributing\n\nTests can be run with `npm test`. I'm more than happy to receive contributions so fork away!\n\n## Synchronous version\n\nNo, there is no sync version, do it async, it's good for your health and contains additional vitamin C, B1, B2 and folate.\n\n\n*Copyright (c) 2012 [Rod Vagg](https://github.com/rvagg) ([@rvagg](https://twitter.com/rvagg))*\n\nMade available under the MIT licence:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rvagg/node-readfiletree/issues"
  },
  "_id": "readfiletree@0.0.1",
  "dist": {
    "shasum": "ea0a9a1b048cd2d084410f84affcf4b46fd0dc77",
    "tarball": "http://registry.npmjs.org/readfiletree/-/readfiletree-0.0.1.tgz"
  },
  "_from": "readfiletree@~0.0.1",
  "_npmVersion": "1.2.30",
  "_npmUser": {
    "name": "rvagg",
    "email": "rod@vagg.org"
  },
  "maintainers": [
    {
      "name": "rvagg",
      "email": "rod@vagg.org"
    }
  ],
  "directories": {},
  "_shasum": "ea0a9a1b048cd2d084410f84affcf4b46fd0dc77",
  "_resolved": "https://registry.npmjs.org/readfiletree/-/readfiletree-0.0.1.tgz",
  "homepage": "https://github.com/rvagg/node-readfiletree"
}
